#standard library
+1 = \x->+(x 1)
*2 = \x->*(2 x)
-1 = \x->-(x 1)
-2 = \x->-(x 2)

fst = hd
snd = =>(tl hd)
thd = =>(tl tl hd)

map-t = \f t
->begin(h=\n
        ->if(eq(n len(t))
             n
             begin(f(take(t n)) h(+(n 1))))
        h(0))

map-l = \f l
->if(empty?(l)
     []
     cons(f(hd(l)) map-l(f tl(l))))

filter-l = \f l
->if(empty?(l)
     []
     if(f(hd(l))
        cons(hd(l) filter-l(f tl(l)))
        filter-l(f tl(l))))

foldl-t = \f i t
->begin(h=\n a->
         if(eq(n len(t))
            a
            h(+(n 1) f(a take(t n))))
         h(0 i))

foldl-l = \f i l
->if(empty?(l)
     i
     foldl-l(f f(i hd(l)) tl(l)))

foldr-t = \f i t
->begin(h=\n a ->
        if(lt(n 0)
           a
           h(-(n 1) f(take(t n) a)))
        h(-(len(t) 1) i))

range-t = \n
->begin(h=\c t ->
        if(eq(c n)
           t
           h(c.+1 +(t <c>)))
        h(0 <>))

range-l = \n
->begin(h=\c l ->
        if(eq(c n)
           l
           h(c.+1 cons(c l)))
        h(0 []))

times = \f ->\n
->while(le(i n)
        f(i)
        i=i.+1|i=1)

#test
if(eq( _FILE _MAIN)
   begin(
         t = < 1 2 3 4 >
         map-t(\x->println(+(x 1)) t)
         println("foldl tuple:"foldl-t(- 15 t))
         println("foldr tuple:"foldr-t(- 15 t))
         \t->while(lt(i len(t))
                   println(take(t i))
                   i=+1(i)|i=0)(range-t(5))

         lst = [1 2 3 4 5]
         println(filter-l(\x->gt(x 3) map-l(+1 lst)))
         println("foldl list:" foldl-l(+ 0 lst))
         )
   )
